"use strict";(self.webpackChunksoap_kit=self.webpackChunksoap_kit||[]).push([[9876],{4036:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"editor-tools/dependency-visualizer","title":"SOAP Dependency Visualizer","description":"The SOAP Dependency Visualizer is SoapKit\'s advanced dependency mapping and analysis tool. It provides real-time visualization of relationships between SOAP assets, GameObjects, and components throughout your project, helping you understand data flow and optimize your architecture.","source":"@site/docs/editor-tools/dependency-visualizer.md","sourceDirName":"editor-tools","slug":"/editor-tools/dependency-visualizer","permalink":"/SoapKit-Doc/docs/editor-tools/dependency-visualizer","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/editor-tools/dependency-visualizer.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"SOAP Dependency Visualizer","sidebar_position":4},"sidebar":"docsSidebar","previous":{"title":"SOAP Binding System","permalink":"/SoapKit-Doc/docs/editor-tools/binding-system"},"next":{"title":"SOAP Performance Analyzer","permalink":"/SoapKit-Doc/docs/editor-tools/performance-analyzer"}}');var r=s(4848),t=s(8453);const a={title:"SOAP Dependency Visualizer",sidebar_position:4},l="SOAP Dependency Visualizer",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Key Features",id:"key-features",level:3},{value:"Core Features",id:"core-features",level:2},{value:"Dependency Mapping Engine",id:"dependency-mapping-engine",level:3},{value:"Visual View Modes",id:"visual-view-modes",level:3},{value:"1. GameObject-Centric View",id:"1-gameobject-centric-view",level:4},{value:"2. Asset-Centric View",id:"2-asset-centric-view",level:4},{value:"3. Graph View",id:"3-graph-view",level:4},{value:"Advanced Analysis Features",id:"advanced-analysis-features",level:2},{value:"Hotspot Detection",id:"hotspot-detection",level:3},{value:"Usage Analytics",id:"usage-analytics",level:3},{value:"Filtering and Search",id:"filtering-and-search",level:3},{value:"Professional Workflows",id:"professional-workflows",level:2},{value:"Architecture Review",id:"architecture-review",level:3},{value:"Refactoring Planning",id:"refactoring-planning",level:3},{value:"Team Collaboration",id:"team-collaboration",level:3},{value:"Configuration and Customization",id:"configuration-and-customization",level:2},{value:"Display Settings",id:"display-settings",level:3},{value:"Performance Settings",id:"performance-settings",level:3},{value:"Integration with Other Tools",id:"integration-with-other-tools",level:2},{value:"Debug Window Integration",id:"debug-window-integration",level:3},{value:"Performance Analyzer Connection",id:"performance-analyzer-connection",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Regular Architecture Reviews",id:"regular-architecture-reviews",level:3},{value:"Performance Monitoring",id:"performance-monitoring",level:3},{value:"Team Onboarding",id:"team-onboarding",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Information",id:"debug-information",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"soap-dependency-visualizer",children:"SOAP Dependency Visualizer"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"SOAP Dependency Visualizer"})," is SoapKit's advanced dependency mapping and analysis tool. It provides real-time visualization of relationships between SOAP assets, GameObjects, and components throughout your project, helping you understand data flow and optimize your architecture."]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The Dependency Visualizer offers multiple view modes to analyze your SOAP architecture from different perspectives, providing insights into usage patterns, potential bottlenecks, and optimization opportunities."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Access:"})," ",(0,r.jsx)(n.code,{children:"Window > SoapKit > Dependency Visualizer"})]}),"\n",(0,r.jsx)(n.h3,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83d\uddfa\ufe0f ",(0,r.jsx)(n.strong,{children:"Interactive Dependency Maps"})," - Visual relationship graphs with real-time updates"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83c\udfaf ",(0,r.jsx)(n.strong,{children:"Multiple View Modes"})," - GameObject-centric, Asset-centric, and Graph views"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd0d ",(0,r.jsx)(n.strong,{children:"Advanced Filtering"})," - Filter by asset type, usage patterns, or specific components"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udcca ",(0,r.jsx)(n.strong,{children:"Usage Analytics"})," - Detailed metrics on asset usage and dependency depth"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udea8 ",(0,r.jsx)(n.strong,{children:"Hotspot Detection"})," - Automatic identification of performance bottlenecks"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83e\udded ",(0,r.jsx)(n.strong,{children:"Smart Navigation"})," - Click to navigate between assets and scenes"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udcc8 ",(0,r.jsx)(n.strong,{children:"Real-time Monitoring"})," - Live updates during Play Mode"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83c\udfa8 ",(0,r.jsx)(n.strong,{children:"Visual Indicators"})," - Color-coded nodes showing health and activity"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"core-features",children:"Core Features"}),"\n",(0,r.jsx)(n.h3,{id:"dependency-mapping-engine",children:"Dependency Mapping Engine"}),"\n",(0,r.jsx)(n.p,{children:"The visualizer uses an advanced analysis engine that scans your entire project to build comprehensive dependency maps:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// Automatic detection of dependencies:\nSOAPAsset \u2192 GameObjects (using the asset)\nGameObjects \u2192 Components (with SOAP references)  \nComponents \u2192 Other SOAPAssets (cross-references)\nScene \u2192 All SOAP usage (scene-wide analysis)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Analysis Capabilities:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deep Scanning"})," - Analyzes all scenes, prefabs, and scriptable objects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cross-Scene Dependencies"})," - Tracks assets used across multiple scenes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Component Relationships"})," - Maps which components use which SOAP assets"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Usage Frequency"})," - Tracks how often assets are referenced"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance Impact"})," - Identifies high-usage patterns"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"visual-view-modes",children:"Visual View Modes"}),"\n",(0,r.jsx)(n.h4,{id:"1-gameobject-centric-view",children:"1. GameObject-Centric View"}),"\n",(0,r.jsx)(n.p,{children:"Shows dependencies from the perspective of GameObjects in your scene:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hierarchical Display"})," - Shows parent-child relationships"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Component Breakdown"})," - Lists all SOAP-using components per GameObject"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Asset Usage Indicators"})," - Visual markers for SOAP asset usage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scene Context"})," - Organized by scene hierarchy"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// Example view structure:\nScene: "GameplayScene"\n\u251c\u2500\u2500 Player (3 SOAP assets)\n\u2502   \u251c\u2500\u2500 HealthSystem \u2192 IntVariable, BoolGameEvent\n\u2502   \u2514\u2500\u2500 MovementController \u2192 Vector3Variable\n\u251c\u2500\u2500 UI Canvas (5 SOAP assets)  \n\u2502   \u251c\u2500\u2500 HealthBar \u2192 IntVariable\n\u2502   \u2514\u2500\u2500 ScoreDisplay \u2192 IntVariable, StringVariable\n\u2514\u2500\u2500 GameManager (2 SOAP assets)\n    \u2514\u2500\u2500 GameStateController \u2192 BoolVariable, UnitGameEvent\n'})}),"\n",(0,r.jsx)(n.h4,{id:"2-asset-centric-view",children:"2. Asset-Centric View"}),"\n",(0,r.jsx)(n.p,{children:"Focuses on SOAP assets and shows what uses them:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Usage Tree"})," - Hierarchical view of asset dependencies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reverse Lookup"})," - Find all consumers of a specific asset"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Orphan Detection"})," - Identify unused assets"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cross-Reference Analysis"})," - See assets that reference other assets"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// Example asset view:\nIntVariable: "PlayerHealth"\n\u251c\u2500\u2500 Used by 4 GameObjects:\n\u2502   \u251c\u2500\u2500 HealthBar (UI/Canvas/HealthBar) \n\u2502   \u251c\u2500\u2500 Player (Characters/Player)\n\u2502   \u251c\u2500\u2500 EnemyAI (Enemies/BasicEnemy)\n\u2502   \u2514\u2500\u2500 GameManager (Management/GameManager)\n\u251c\u2500\u2500 Referenced by Events:\n\u2502   \u2514\u2500\u2500 BoolGameEvent: "OnPlayerDied"\n\u2514\u2500\u2500 Performance: 47 updates/sec, 0.2ms avg\n'})}),"\n",(0,r.jsx)(n.h4,{id:"3-graph-view",children:"3. Graph View"}),"\n",(0,r.jsx)(n.p,{children:"Interactive node-graph visualization showing system-wide relationships:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Interactive Nodes"})," - Drag, zoom, and explore dependency networks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Color Coding"})," - Visual indicators for different asset types and health status"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Connection Lines"})," - Show direct and indirect relationships"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cluster Analysis"})," - Groups related assets visually"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance Overlays"})," - Heat map showing performance hotspots"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Color Scheme:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83d\udfe2 ",(0,r.jsx)(n.strong,{children:"Green Nodes"})," - Healthy, well-performing assets"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udfe1 ",(0,r.jsx)(n.strong,{children:"Yellow Nodes"})," - Warning conditions (high usage, many listeners)"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd34 ",(0,r.jsx)(n.strong,{children:"Red Nodes"})," - Performance hotspots requiring attention"]}),"\n",(0,r.jsxs)(n.li,{children:["\u26aa ",(0,r.jsx)(n.strong,{children:"White Nodes"})," - Unused or low-activity assets"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd35 ",(0,r.jsx)(n.strong,{children:"Blue Nodes"})," - Critical system assets (high importance)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"advanced-analysis-features",children:"Advanced Analysis Features"}),"\n",(0,r.jsx)(n.h3,{id:"hotspot-detection",children:"Hotspot Detection"}),"\n",(0,r.jsx)(n.p,{children:"Automatic identification of performance and design issues:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance Hotspots:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'\ud83d\udd25 Critical Issues:\n\u2022 "PlayerHealth" - 47 updates/sec, 12 listeners\n\u2022 "GameState" - Used by 23 GameObjects across 4 scenes\n\u2022 "InputEvents" - 156 raises/sec, potential performance impact\n\n\u26a0\ufe0f Design Issues:  \n\u2022 "DebugVariable" - Only used in editor, consider conditional compilation\n\u2022 "TempData" - High update frequency but only 1 listener\n\u2022 Circular dependencies detected in UI system\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Optimization Recommendations:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Suggests asset consolidation opportunities"}),"\n",(0,r.jsx)(n.li,{children:"Identifies unused assets for cleanup"}),"\n",(0,r.jsx)(n.li,{children:"Recommends performance optimizations"}),"\n",(0,r.jsx)(n.li,{children:"Highlights architectural improvements"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"usage-analytics",children:"Usage Analytics"}),"\n",(0,r.jsx)(n.p,{children:"Detailed metrics and statistics about your SOAP architecture:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Project-Wide Statistics:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"\ud83d\udcca Project Overview:\nTotal SOAP Assets: 47\n\u251c\u2500\u2500 Variables: 28 (12 Int, 8 Float, 5 Bool, 3 String)\n\u251c\u2500\u2500 Events: 19 (7 Unit, 6 Bool, 4 Int, 2 Custom)\n\u2514\u2500\u2500 Custom Types: 0\n\nScene Distribution:\n\u251c\u2500\u2500 MainMenu: 12 assets (3 variables, 9 events)\n\u251c\u2500\u2500 Gameplay: 31 assets (22 variables, 9 events) \n\u251c\u2500\u2500 Settings: 8 assets (6 variables, 2 events)\n\u2514\u2500\u2500 Loading: 4 assets (1 variable, 3 events)\n\nUsage Patterns:\n\u2022 Most Referenced: PlayerHealth (12 references)\n\u2022 Highest Activity: InputHandler (234 events/min)\n\u2022 Least Used: 6 assets with 0 references\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Per-Asset Analytics:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Reference count and usage frequency"}),"\n",(0,r.jsx)(n.li,{children:"Performance metrics and update rates"}),"\n",(0,r.jsx)(n.li,{children:"Memory footprint analysis"}),"\n",(0,r.jsx)(n.li,{children:"Lifecycle tracking (creation, modification, last access)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"filtering-and-search",children:"Filtering and Search"}),"\n",(0,r.jsx)(n.p,{children:"Powerful filtering system to focus on specific aspects:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Filter Categories:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"\ud83c\udfaf Asset Type Filters:\n\u251c\u2500\u2500 Variables (Bool, Int, Float, String, Vector, Color, etc.)\n\u251c\u2500\u2500 Events (Unit, Typed, Custom)\n\u251c\u2500\u2500 Custom ScriptableObjects\n\u2514\u2500\u2500 Cross-references only\n\n\ud83d\udd0d Usage Filters:\n\u251c\u2500\u2500 High Usage (10+ references)\n\u251c\u2500\u2500 Unused Assets (0 references)\n\u251c\u2500\u2500 Performance Hotspots\n\u251c\u2500\u2500 Recently Modified\n\u2514\u2500\u2500 Scene-Specific\n\n\u26a1 Performance Filters:\n\u251c\u2500\u2500 High Update Frequency (10+ updates/sec)\n\u251c\u2500\u2500 Memory Usage (High/Medium/Low)\n\u251c\u2500\u2500 Listener Count (5+, 10+, 20+)\n\u2514\u2500\u2500 Error Prone Assets\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Search Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Smart Search"})," - Find assets by name, type, or usage pattern"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regular Expressions"})," - Advanced pattern matching"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-Criteria"})," - Combine multiple filters for precise results"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Saved Searches"})," - Store frequently used filter combinations"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"professional-workflows",children:"Professional Workflows"}),"\n",(0,r.jsx)(n.h3,{id:"architecture-review",children:"Architecture Review"}),"\n",(0,r.jsx)(n.p,{children:"Use the visualizer for comprehensive architecture analysis:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 1: Overall Assessment"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Switch to ",(0,r.jsx)(n.strong,{children:"Graph View"})," for system-wide overview"]}),"\n",(0,r.jsxs)(n.li,{children:["Enable ",(0,r.jsx)(n.strong,{children:"Performance Overlay"})," to see hotspots"]}),"\n",(0,r.jsxs)(n.li,{children:["Check for ",(0,r.jsx)(n.strong,{children:"Circular Dependencies"})," (shown as red connections)"]}),"\n",(0,r.jsxs)(n.li,{children:["Review ",(0,r.jsx)(n.strong,{children:"Cluster Density"})," (tightly coupled areas)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 2: Asset Optimization"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Switch to ",(0,r.jsx)(n.strong,{children:"Asset-Centric View"})]}),"\n",(0,r.jsxs)(n.li,{children:["Filter by ",(0,r.jsx)(n.strong,{children:'"Unused Assets"'})," to identify cleanup opportunities"]}),"\n",(0,r.jsxs)(n.li,{children:["Check ",(0,r.jsx)(n.strong,{children:'"High Usage"'})," assets for optimization potential"]}),"\n",(0,r.jsxs)(n.li,{children:["Review ",(0,r.jsx)(n.strong,{children:"Cross-References"})," for architecture coherence"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 3: Performance Analysis"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Enable ",(0,r.jsx)(n.strong,{children:"Real-Time Monitoring"})," during Play Mode"]}),"\n",(0,r.jsxs)(n.li,{children:["Watch for ",(0,r.jsx)(n.strong,{children:"Dynamic Hotspots"})," that appear during gameplay"]}),"\n",(0,r.jsxs)(n.li,{children:["Analyze ",(0,r.jsx)(n.strong,{children:"Update Frequencies"})," for expensive operations"]}),"\n",(0,r.jsxs)(n.li,{children:["Check ",(0,r.jsx)(n.strong,{children:"Memory Usage"})," patterns over time"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"refactoring-planning",children:"Refactoring Planning"}),"\n",(0,r.jsx)(n.p,{children:"Plan large-scale refactoring with dependency insights:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Safe Refactoring Process:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'1. Identify Target Asset:\n   \u2192 Select asset in any view\n   \u2192 Review all dependencies and references\n\n2. Impact Analysis:\n   \u2192 Check "Used By" list for affected GameObjects\n   \u2192 Review cross-references to other assets\n   \u2192 Analyze performance impact of changes\n\n3. Plan Migration:\n   \u2192 Identify assets that can be merged\n   \u2192 Plan new asset structure\n   \u2192 Check for breaking dependencies\n\n4. Execute with Confidence:\n   \u2192 Use dependency map to validate changes\n   \u2192 Monitor real-time updates during refactoring\n   \u2192 Verify no broken references remain\n'})}),"\n",(0,r.jsx)(n.h3,{id:"team-collaboration",children:"Team Collaboration"}),"\n",(0,r.jsx)(n.p,{children:"Share architecture insights across your development team:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Documentation Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Export Dependency Maps"})," - Save visualizations as images"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Generate Reports"})," - Automated architecture analysis reports"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Share Configurations"})," - Export filter settings for team consistency"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance Baselines"})," - Track architecture health over time"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"configuration-and-customization",children:"Configuration and Customization"}),"\n",(0,r.jsx)(n.h3,{id:"display-settings",children:"Display Settings"}),"\n",(0,r.jsx)(n.p,{children:"Customize the visualizer for your workflow:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// Visual Preferences:\nNode Size: Small/Medium/Large\nConnection Style: Curved/Straight/Organic\nColor Scheme: Default/High Contrast/Colorblind Friendly\nAnimation Speed: Slow/Medium/Fast/Disabled\n\n// Information Density:\nShow Asset Types: Yes/No\nShow Reference Counts: Yes/No\nShow Performance Metrics: Yes/No\nShow Scene Information: Yes/No\n"})}),"\n",(0,r.jsx)(n.h3,{id:"performance-settings",children:"Performance Settings"}),"\n",(0,r.jsx)(n.p,{children:"Configure analysis depth and update frequency:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// Analysis Settings:\nDeep Scan Enabled: Yes/No (includes inactive GameObjects)\nCross-Scene Analysis: Yes/No (performance impact)\nReal-Time Updates: Yes/No (Play Mode only)\nUpdate Frequency: 0.5s/1s/2s/5s\n\n// Memory Settings:\nCache Dependency Data: Yes/No\nMax Cached Scenes: 5/10/20/Unlimited\nAuto-Cleanup Unused: Yes/No\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"integration-with-other-tools",children:"Integration with Other Tools"}),"\n",(0,r.jsx)(n.h3,{id:"debug-window-integration",children:"Debug Window Integration"}),"\n",(0,r.jsx)(n.p,{children:"Seamless integration with the main SOAP Debug Window:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// Cross-tool navigation:\nDependency Visualizer \u2192 Debug Window:\n\u251c\u2500\u2500 Right-click asset \u2192 "Debug in Console"\n\u251c\u2500\u2500 Double-click node \u2192 "Focus in Debug Window"\n\u2514\u2500\u2500 Performance hotspot \u2192 "Analyze Performance"\n\nDebug Window \u2192 Dependency Visualizer:\n\u251c\u2500\u2500 Asset context menu \u2192 "Show Dependencies"\n\u251c\u2500\u2500 Performance alert \u2192 "View in Graph"\n\u2514\u2500\u2500 Usage report \u2192 "Visualize Usage"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"performance-analyzer-connection",children:"Performance Analyzer Connection"}),"\n",(0,r.jsx)(n.p,{children:"Direct integration with performance monitoring:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Live Performance Data"})," - Real-time metrics overlay on dependency graph"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hotspot Correlation"})," - Performance issues highlighted in dependency view"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimization Tracking"})," - Monitor improvements after architecture changes"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"regular-architecture-reviews",children:"Regular Architecture Reviews"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Monthly Architecture Health Check:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Run full project scan in ",(0,r.jsx)(n.strong,{children:"Graph View"})]}),"\n",(0,r.jsxs)(n.li,{children:["Check for new ",(0,r.jsx)(n.strong,{children:"Performance Hotspots"})]}),"\n",(0,r.jsxs)(n.li,{children:["Identify and clean up ",(0,r.jsx)(n.strong,{children:"Unused Assets"})]}),"\n",(0,r.jsxs)(n.li,{children:["Review ",(0,r.jsx)(n.strong,{children:"Dependency Depth"})," for complexity management"]}),"\n",(0,r.jsx)(n.li,{children:"Document architectural decisions and changes"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"performance-monitoring",children:"Performance Monitoring"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Continuous Performance Awareness:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// Set up monitoring alerts:\nConfigure hotspot detection thresholds:\n\u251c\u2500\u2500 Update Frequency > 30/sec \u2192 Warning\n\u251c\u2500\u2500 Listener Count > 15 \u2192 Review Required  \n\u251c\u2500\u2500 Memory Usage > 50MB \u2192 Investigation Needed\n\u2514\u2500\u2500 Circular Dependencies \u2192 Immediate Fix\n\n// Regular checkpoints:\n\u2514\u2500\u2500 Before major releases\n\u2514\u2500\u2500 After significant feature additions\n\u2514\u2500\u2500 During performance optimization phases\n\u2514\u2500\u2500 When team reports architectural confusion\n"})}),"\n",(0,r.jsx)(n.h3,{id:"team-onboarding",children:"Team Onboarding"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"New Developer Workflow:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Architecture Overview"})," - Show Graph View of main systems"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Key Assets Tour"})," - Highlight critical variables and events"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hotspot Awareness"})," - Point out performance-sensitive areas"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Navigation Training"})," - Teach efficient tool usage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Best Practices"})," - Share team conventions and standards"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:'Q: "Dependencies not showing correctly"'}),"\nA: Refresh the analysis:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:'"\ud83d\udd04 Refresh Analysis"'})," in toolbar"]}),"\n",(0,r.jsx)(n.li,{children:"Check if assets are properly saved"}),"\n",(0,r.jsx)(n.li,{children:"Verify SOAP assets are in correct folders"}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.strong,{children:'"Deep Scan"'})," for thorough analysis"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:'Q: "Performance is slow with large projects"'}),"\nA: Optimize analysis settings:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Disable ",(0,r.jsx)(n.strong,{children:'"Real-Time Updates"'})," when not needed"]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.strong,{children:"Scene-Specific Filtering"})," to reduce scope"]}),"\n",(0,r.jsxs)(n.li,{children:["Increase ",(0,r.jsx)(n.strong,{children:"Update Frequency"})," to 2-5 seconds"]}),"\n",(0,r.jsxs)(n.li,{children:["Enable ",(0,r.jsx)(n.strong,{children:"Auto-Cleanup Unused"})," to reduce memory usage"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:'Q: "Graph view is cluttered and hard to read"'}),"\nA: Improve visualization:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.strong,{children:"Smart Filtering"})," to show only relevant assets"]}),"\n",(0,r.jsxs)(n.li,{children:["Adjust ",(0,r.jsx)(n.strong,{children:"Node Size"})," to Medium or Small"]}),"\n",(0,r.jsxs)(n.li,{children:["Enable ",(0,r.jsx)(n.strong,{children:"Cluster Analysis"})," to group related assets"]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.strong,{children:"Performance Overlay"})," to focus on important nodes"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"debug-information",children:"Debug Information"}),"\n",(0,r.jsx)(n.p,{children:"Access detailed debug information for troubleshooting:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// Debug Panel Information:\nAnalysis Statistics:\n\u251c\u2500\u2500 Total Assets Scanned: 47\n\u251c\u2500\u2500 Dependencies Found: 156  \n\u251c\u2500\u2500 Scenes Analyzed: 4\n\u251c\u2500\u2500 Analysis Time: 0.3s\n\u2514\u2500\u2500 Memory Usage: 12.4 MB\n\nCache Information:\n\u251c\u2500\u2500 Cached Dependencies: 156\n\u251c\u2500\u2500 Cache Hit Rate: 94.2%\n\u251c\u2500\u2500 Last Full Scan: 2 minutes ago\n\u2514\u2500\u2500 Next Scheduled Scan: In 28 minutes\n\nError Log:\n\u2514\u2500\u2500 No errors detected \u2713\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"SOAP Dependency Visualizer"})," transforms complex architecture understanding into intuitive visual insights. Master this tool to maintain clean, performant, and well-structured SOAP architectures that scale with your project's growth! \ud83d\uddfa\ufe0f\u2728"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./performance-analyzer",children:"Performance Analyzer"})})," - Monitor and optimize SOAP performance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./debug-window",children:"Debug Window"})})," - Debug your dependencies in real-time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"../advanced/best-practices",children:"Best Practices"})})," - Architecture guidelines and patterns"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);