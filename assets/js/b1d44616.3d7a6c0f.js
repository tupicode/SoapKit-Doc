"use strict";(self.webpackChunksoap_kit=self.webpackChunksoap_kit||[]).push([[5671],{3421:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/debug-window-ccc45424605587aad4d9f7772e175d4c.png"},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},9704:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"why-soapkit","title":"Why Choose SoapKit?","description":"SoapKit isn\'t just another Unity package\u2014it\'s a game architecture revolution that transforms how you build Unity projects. Here\'s why thousands of developers are making the switch to the ScriptableObject Architecture Pattern.","source":"@site/docs/why-soapkit.md","sourceDirName":".","slug":"/why-soapkit","permalink":"/SoapKit-Doc/docs/why-soapkit","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/why-soapkit.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Why Choose SoapKit?","sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"SoapKit Overview","permalink":"/SoapKit-Doc/docs/"},"next":{"title":"Getting Started","permalink":"/SoapKit-Doc/docs/getting-started"}}');var r=s(4848),t=s(8453);const a={title:"Why Choose SoapKit?",sidebar_position:2},l="Why Choose SoapKit?",o={},c=[{value:"<strong>Immediate Benefits</strong>",id:"immediate-benefits",level:2},{value:"<strong>1. Eliminate Spaghetti Code</strong>",id:"1-eliminate-spaghetti-code",level:3},{value:"<strong>2. Build Systems That Scale</strong>",id:"2-build-systems-that-scale",level:3},{value:"<strong>3. Debug Like a Pro</strong>",id:"3-debug-like-a-pro",level:3},{value:"<strong>Professional Advantages</strong>",id:"professional-advantages",level:2},{value:"<strong>Team Development Made Easy</strong>",id:"team-development-made-easy",level:3},{value:"<strong>Testing &amp; QA Revolution</strong>",id:"testing--qa-revolution",level:3},{value:"<strong>Designer Empowerment</strong>",id:"designer-empowerment",level:3},{value:"<strong>Technical Excellence</strong>",id:"technical-excellence",level:2},{value:"<strong>Performance That Matters</strong>",id:"performance-that-matters",level:3},{value:"<strong>Type Safety &amp; IntelliSense</strong>",id:"type-safety--intellisense",level:3},{value:"<strong>Built for Modern Unity</strong>",id:"built-for-modern-unity",level:3},{value:"<strong>Enterprise-Grade Quality</strong>",id:"enterprise-grade-quality",level:2},{value:"<strong>Professional Documentation</strong>",id:"professional-documentation",level:3},{value:"<strong>Comprehensive Testing</strong>",id:"comprehensive-testing",level:3},{value:"<strong>Long-Term Support</strong>",id:"long-term-support",level:3},{value:"\ud83c\udfae <strong>Perfect For Any Project</strong>",id:"-perfect-for-any-project",level:2},{value:"<strong>Indie Games</strong>",id:"indie-games",level:3},{value:"<strong>Mobile Games</strong>",id:"mobile-games",level:3},{value:"<strong>AAA Productions</strong>",id:"aaa-productions",level:3},{value:"<strong>Educational Projects</strong>",id:"educational-projects",level:3},{value:"\ud83d\udc8e <strong>The Bottom Line</strong>",id:"-the-bottom-line",level:2},{value:"Ready to Transform Your Development?",id:"ready-to-transform-your-development",level:2}];function d(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"why-choose-soapkit",children:"Why Choose SoapKit?"})}),"\n",(0,r.jsxs)(n.p,{children:["SoapKit isn't just another Unity package\u2014it's a ",(0,r.jsx)(n.strong,{children:"game architecture revolution"})," that transforms how you build Unity projects. Here's why thousands of developers are making the switch to the ScriptableObject Architecture Pattern."]}),"\n",(0,r.jsx)(n.h2,{id:"immediate-benefits",children:(0,r.jsx)(n.strong,{children:"Immediate Benefits"})}),"\n",(0,r.jsx)(n.h3,{id:"1-eliminate-spaghetti-code",children:(0,r.jsx)(n.strong,{children:"1. Eliminate Spaghetti Code"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Before SoapKit"})," - Traditional approach leads to chaos:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// \u274c Nightmare to maintain\npublic class PlayerController : MonoBehaviour \n{\n    public UIManager uiManager;\n    public GameManager gameManager;\n    public AudioManager audioManager;\n    public EffectsManager effectsManager;\n    public SaveManager saveManager;\n    public AchievementManager achievementManager;\n    \n    void TakeDamage(int damage) \n    {\n        health -= damage;\n        uiManager.UpdateHealthBar(health);           // UI dependency\n        gameManager.CheckGameOver(health);          // Game logic dependency  \n        audioManager.PlayHurtSound();               // Audio dependency\n        effectsManager.ShowDamageEffect();          // VFX dependency\n        saveManager.SavePlayerData();               // Save dependency\n        achievementManager.CheckDamageTaken();      // Achievement dependency\n        \n        // What happens when you need to add more systems? \ud83d\ude31\n    }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"After SoapKit"})," - Clean, decoupled architecture:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// \u2705 Clean, maintainable, extensible\npublic class PlayerController : MonoBehaviour \n{\n    [SerializeField] private IntVariable playerHealth;\n    [SerializeField] private IntGameEvent onDamageTaken;\n    \n    void TakeDamage(int damage) \n    {\n        playerHealth.Subtract(damage);          // Update data\n        onDamageTaken.Raise(damage);           // Notify all interested systems\n        \n        // That's it! All systems react independently \ud83c\udf89\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-build-systems-that-scale",children:(0,r.jsx)(n.strong,{children:"2. Build Systems That Scale"})}),"\n",(0,r.jsxs)(n.p,{children:["Traditional approach ",(0,r.jsx)(n.strong,{children:"breaks"})," as your project grows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// \u274c Every new feature requires more dependencies\npublic class Enemy : MonoBehaviour \n{\n    // Need to add 5+ new references for each new system\n    public UIManager ui;        // For health bars\n    public GameManager gm;      // For score updates  \n    public AudioManager audio;  // For death sounds\n    public ParticleManager fx;  // For death effects\n    public QuestManager quests; // For kill tracking\n    // ... and it keeps growing\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["SoapKit ",(0,r.jsx)(n.strong,{children:"scales beautifully"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// \u2705 Add infinite systems without changing existing code\npublic class Enemy : MonoBehaviour \n{\n    [SerializeField] private IntVariable enemyHealth;\n    [SerializeField] private UnitGameEvent onEnemyDied;\n    \n    void Die() \n    {\n        onEnemyDied.Raise(); \n        // UI, Audio, VFX, Quests, Analytics, etc. all react automatically!\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-debug-like-a-pro",children:(0,r.jsx)(n.strong,{children:"3. Debug Like a Pro"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Traditional debugging"})," is painful:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Breakpoints everywhere"}),"\n",(0,r.jsx)(n.li,{children:"Printf debugging"}),"\n",(0,r.jsx)(n.li,{children:"Manual inspection of complex object graphs"}),"\n",(0,r.jsx)(n.li,{children:"No visibility into system interactions"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SoapKit debugging"})," is revolutionary:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Debug Window Screenshot",src:s(3421).A+"",width:"1088",height:"688"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-time monitoring"})," of all variables and events"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Visual dependency graphs"})," showing system relationships"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance profiling"})," with bottleneck detection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event history tracking"})," for debugging complex interactions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"One-click testing"})," - raise any event with custom data"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"professional-advantages",children:(0,r.jsx)(n.strong,{children:"Professional Advantages"})}),"\n",(0,r.jsx)(n.h3,{id:"team-development-made-easy",children:(0,r.jsx)(n.strong,{children:"Team Development Made Easy"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem"}),": Multiple developers stepping on each other's code"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// \u274c Merge conflicts nightmare\npublic class GameManager : MonoBehaviour \n{\n    void Update() {\n        // Developer A adds this\n        HandlePlayerInput();\n        \n        // Developer B adds this - CONFLICT!\n        HandleEnemyAI();\n        \n        // Developer C adds this - MORE CONFLICTS!\n        HandleUIUpdates();\n    }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SoapKit Solution"}),": Perfect parallel development"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// \u2705 Developers work independently on separate systems\n\n// Developer A - Input System\npublic class InputHandler : MonoBehaviour {\n    [SerializeField] private Vector2GameEvent onPlayerMove;\n    void Update() { onPlayerMove.Raise(inputVector); }\n}\n\n// Developer B - AI System  \npublic class AIController : MonoBehaviour {\n    [SerializeField] private Vector2GameEvent onPlayerMove;\n    void OnEnable() { onPlayerMove.AddListener(ReactToPlayer); }\n}\n\n// Developer C - UI System\npublic class UIController : MonoBehaviour {\n    [SerializeField] private Vector2GameEvent onPlayerMove;  \n    void OnEnable() { onPlayerMove.AddListener(UpdateMinimap); }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"testing--qa-revolution",children:(0,r.jsx)(n.strong,{children:"Testing & QA Revolution"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Traditional testing"})," requires complex scene setup:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// \u274c Hard to test in isolation\n[Test]\npublic void TestPlayerDeath() {\n    // Need entire scene setup\n    var scene = LoadComplexTestScene();\n    var player = FindPlayerInScene();\n    var ui = FindUIInScene();\n    var audio = FindAudioInScene();\n    // ... 20+ lines of setup just to test one thing\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SoapKit testing"})," is simple and focused:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// \u2705 Test individual systems in isolation\n[Test] \npublic void TestHealthSystem() {\n    var health = CreateHealthVariable(100);\n    var onDied = CreateDeathEvent();\n    \n    var system = new HealthSystem(health, onDied);\n    system.TakeDamage(150);\n    \n    Assert.AreEqual(0, health.Value);\n    Assert.IsTrue(onDied.WasRaised);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"designer-empowerment",children:(0,r.jsx)(n.strong,{children:"Designer Empowerment"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Before"}),": Designers constantly need programmers"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// \u274c Hard-coded values buried in scripts\npublic class PlayerStats : MonoBehaviour \n{\n    void Start() {\n        maxHealth = 100;      // Designer wants to change this\n        movementSpeed = 5f;   // And this\n        jumpHeight = 2f;      // And this  \n        // Designer files bug report, waits for programmer...\n    }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"After"}),": Designers control their own destiny"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// \u2705 All values exposed as ScriptableObject assets\npublic class PlayerStats : MonoBehaviour \n{\n    [SerializeField] private IntVariable maxHealth;        // Designer creates asset\n    [SerializeField] private FloatVariable movementSpeed;  // Designer sets value\n    [SerializeField] private FloatVariable jumpHeight;     // Designer tweaks in real-time\n    \n    // Designers can create variants, test different configurations,\n    // and see changes immediately without programmer involvement! \ud83c\udf89\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"technical-excellence",children:(0,r.jsx)(n.strong,{children:"Technical Excellence"})}),"\n",(0,r.jsx)(n.h3,{id:"performance-that-matters",children:(0,r.jsx)(n.strong,{children:"Performance That Matters"})}),"\n",(0,r.jsxs)(n.p,{children:["SoapKit is built for ",(0,r.jsx)(n.strong,{children:"production games"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zero garbage collection"})," during gameplay"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimized event dispatch"})," for high-frequency events"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Smart caching"})," reduces lookup costs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Built-in profiling"})," identifies performance bottlenecks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory efficient"})," ScriptableObject pooling"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// Performance comparison\nTraditional MonoBehaviour.SendMessage():  ~2000ns per call\nUnity Events (UnityEvent):                ~800ns per call  \nSoapKit GameEvents:                      ~200ns per call  \u26a1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"type-safety--intellisense",children:(0,r.jsx)(n.strong,{children:"Type Safety & IntelliSense"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Traditional Unity Events"})," are stringly-typed:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// \u274c No compile-time safety\nSendMessage("TakeDamage", 25);        // Typo = runtime error\nGetComponent<Health>()?.TakeDamage;   // Null reference exception\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SoapKit Events"})," are strongly-typed:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// \u2705 Full type safety and IntelliSense support\nintGameEvent.Raise(25);               // Compiler validates everything\nstringGameEvent.Raise("Player");      // Autocomplete works perfectly  \nvector3GameEvent.Raise(position);     // No casting, no boxing\n'})}),"\n",(0,r.jsx)(n.h3,{id:"built-for-modern-unity",children:(0,r.jsx)(n.strong,{children:"Built for Modern Unity"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unity 2022.3 LTS"})," and ",(0,r.jsx)(n.strong,{children:"Unity 6"})," compatible"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"UPM Package Manager"})," integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Assembly Definition"})," for clean compilation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C# Jobs System"})," ready (no managed references blocking)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DOTS"})," compatible data patterns"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"enterprise-grade-quality",children:(0,r.jsx)(n.strong,{children:"Enterprise-Grade Quality"})}),"\n",(0,r.jsx)(n.h3,{id:"professional-documentation",children:(0,r.jsx)(n.strong,{children:"Professional Documentation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Complete API reference"})," with examples"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Video tutorials"})," for advanced patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Migration guides"})," from other architectures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Best practices"})," guide from industry experts"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"comprehensive-testing",children:(0,r.jsx)(n.strong,{children:"Comprehensive Testing"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unit tests"})," for all core functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration tests"})," with sample projects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance benchmarks"})," on multiple platforms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Compatibility testing"})," across Unity versions"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"long-term-support",children:(0,r.jsx)(n.strong,{children:"Long-Term Support"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regular updates"})," with Unity releases"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backward compatibility"})," guaranteed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Community support"})," and extensions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Professional consulting"})," available"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"-perfect-for-any-project",children:["\ud83c\udfae ",(0,r.jsx)(n.strong,{children:"Perfect For Any Project"})]}),"\n",(0,r.jsx)(n.h3,{id:"indie-games",children:(0,r.jsx)(n.strong,{children:"Indie Games"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Rapid prototyping and iteration"}),"\n",(0,r.jsx)(n.li,{children:"Easy to learn and implement"}),"\n",(0,r.jsx)(n.li,{children:"Scales from simple to complex"}),"\n",(0,r.jsx)(n.li,{children:"Solo developer friendly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"mobile-games",children:(0,r.jsx)(n.strong,{children:"Mobile Games"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Performance optimized for mobile"}),"\n",(0,r.jsx)(n.li,{children:"Easy A/B testing and balancing"}),"\n",(0,r.jsx)(n.li,{children:"Perfect for live service games"}),"\n",(0,r.jsx)(n.li,{children:"Analytics integration ready"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"aaa-productions",children:(0,r.jsx)(n.strong,{children:"AAA Productions"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Handles complex system interactions"}),"\n",(0,r.jsx)(n.li,{children:"Supports large development teams"}),"\n",(0,r.jsx)(n.li,{children:"Professional debugging tools"}),"\n",(0,r.jsx)(n.li,{children:"Enterprise-grade architecture"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"educational-projects",children:(0,r.jsx)(n.strong,{children:"Educational Projects"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Clean, understandable code patterns"}),"\n",(0,r.jsx)(n.li,{children:"Great for teaching game architecture"}),"\n",(0,r.jsx)(n.li,{children:"Excellent for student portfolios"}),"\n",(0,r.jsx)(n.li,{children:"Industry-standard practices"}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"-the-bottom-line",children:["\ud83d\udc8e ",(0,r.jsx)(n.strong,{children:"The Bottom Line"})]}),"\n",(0,r.jsxs)(n.p,{children:["SoapKit isn't just a package\u2014it's a ",(0,r.jsx)(n.strong,{children:"competitive advantage"}),":"]}),"\n",(0,r.jsxs)(n.p,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Build faster"})," with decoupled systems",(0,r.jsx)(n.br,{}),"\n","\u2705 ",(0,r.jsx)(n.strong,{children:"Debug easier"})," with professional tools",(0,r.jsx)(n.br,{}),"\n","\u2705 ",(0,r.jsx)(n.strong,{children:"Scale better"})," as your project grows",(0,r.jsx)(n.br,{}),"\n","\u2705 ",(0,r.jsx)(n.strong,{children:"Collaborate smoother"})," with your team",(0,r.jsx)(n.br,{}),"\n","\u2705 ",(0,r.jsx)(n.strong,{children:"Ship sooner"})," with fewer bugs",(0,r.jsx)(n.br,{}),"\n","\u2705 ",(0,r.jsx)(n.strong,{children:"Maintain longer"})," with clean architecture"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"ready-to-transform-your-development",children:"Ready to Transform Your Development?"}),"\n",(0,r.jsx)(n.p,{children:"Join thousands of developers who've already made the switch to professional game architecture."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./getting-started",children:"Get Started Now \u2192"})})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["Still have questions? Check out our ",(0,r.jsx)(n.a,{href:"./examples/health-system",children:"comprehensive examples"})," or see the ",(0,r.jsx)(n.a,{href:"./api/overview",children:"complete API reference"}),"."]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"\"The difference between amateur and professional game development isn't just the end result\u2014it's the architecture that gets you there. SoapKit is that architecture.\""})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);